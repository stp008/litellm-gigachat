#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø–∞–∫–µ—Ç–∞ litellm-gigachat –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ PyPI.
"""

import subprocess
import sys
import shutil
from pathlib import Path

def clean_build_dirs():
    """–û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–±–æ—Ä–∫–∏."""
    dirs_to_clean = ['build', 'dist', 'src/litellm_gigachat.egg-info']
    
    for dir_name in dirs_to_clean:
        dir_path = Path(dir_name)
        if dir_path.exists():
            print(f"–£–¥–∞–ª–µ–Ω–∏–µ {dir_path}")
            shutil.rmtree(dir_path)

def install_build_tools():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–±–æ—Ä–∫–∏."""
    print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–±–æ—Ä–∫–∏...")
    subprocess.run([
        sys.executable, "-m", "pip", "install", "--upgrade",
        "build", "twine", "setuptools", "wheel"
    ], check=True)

def build_package():
    """–°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞."""
    print("–°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞...")
    subprocess.run([
        sys.executable, "-m", "build"
    ], check=True)

def check_package():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞."""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞...")
    subprocess.run([
        sys.executable, "-m", "twine", "check", "dist/*"
    ], check=True)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏."""
    print("üî® –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞ litellm-gigachat")
    print("=" * 50)
    
    try:
        clean_build_dirs()
        install_build_tools()
        build_package()
        check_package()
        
        print("\n‚úÖ –ü–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!")
        print("üì¶ –§–∞–π–ª—ã –ø–∞–∫–µ—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ dist/")
        print("\n–î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ PyPI –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  python publish_package.py")
        
    except subprocess.CalledProcessError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
