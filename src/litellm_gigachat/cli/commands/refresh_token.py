"""
–ö–æ–º–∞–Ω–¥–∞ refresh-token –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞.
"""

import click
import logging
import sys
import time
from dotenv import load_dotenv

from ...core.token_manager import get_global_token_manager


logger = logging.getLogger(__name__)


def refresh_token_force(force: bool = False) -> bool:
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω."""
    try:
        token_manager = get_global_token_manager()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
        current_info = token_manager.get_token_info()
        
        if current_info and not force:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ç–æ–∫–µ–Ω
            expires_in = current_info.get("expires_in", 0)
            if expires_in > 300:  # –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –µ—â–µ –±–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç
                logger.info(f"–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –µ—â–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω ({expires_in} —Å–µ–∫—É–Ω–¥)")
                logger.info("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
                return False
        
        logger.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...")
        start_time = time.time()
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
        if hasattr(token_manager, 'refresh_token'):
            success = token_manager.refresh_token()
        else:
            # –ï—Å–ª–∏ –º–µ—Ç–æ–¥–∞ refresh_token –Ω–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
            token_manager._token = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à
            token = token_manager.get_token()
            success = bool(token)
        
        end_time = time.time()
        
        if success:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º —Ç–æ–∫–µ–Ω–µ
            new_info = token_manager.get_token_info()
            
            logger.info(f"‚úì –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∑–∞ {end_time - start_time:.2f}s")
            
            if new_info:
                expires_in = new_info.get("expires_in", 0)
                logger.info(f"‚úì –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {expires_in} —Å–µ–∫—É–Ω–¥")
                
                if logger.isEnabledFor(logging.DEBUG):
                    logger.debug(f"New token info: {new_info}")
            
            return True
        else:
            logger.error("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω")
            return False
            
    except Exception as exc:
        logger.error(f"‚úó –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {exc}")
        logger.debug("Token refresh error details:", exc_info=True)
        return False


def validate_environment() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞."""
    import os
    
    if not os.getenv("GIGACHAT_AUTH_KEY"):
        logger.error("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è GIGACHAT_AUTH_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        logger.error("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export GIGACHAT_AUTH_KEY='–≤–∞—à_–∫–ª—é—á'")
        return False
    
    logger.debug("Environment validation passed")
    return True


@click.command()
@click.option(
    '--force',
    is_flag=True,
    help='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –µ—â–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω'
)
@click.pass_context
def refresh_token(ctx, force):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω."""
    
    verbose = ctx.obj.get('verbose', False)
    debug = ctx.obj.get('debug', False)
    
    if debug:
        click.echo(f"üîç Debug mode enabled")
        click.echo(f"üîç Verbose mode: {verbose}")
        click.echo(f"üîç Force refresh: {force}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    if not debug:
        click.echo("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ GigaChat")
        click.echo("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not validate_environment():
        click.echo("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è", err=True)
        sys.exit(1)
    
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
        if verbose or debug:
            logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —Ç–æ–∫–µ–Ω–µ...")
            
            token_manager = get_global_token_manager()
            current_info = token_manager.get_token_info()
            
            if current_info:
                expires_in = current_info.get("expires_in", 0)
                logger.info(f"–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω: {expires_in} —Å–µ–∫—É–Ω–¥")
                
                if debug:
                    logger.debug(f"Current token info: {current_info}")
            else:
                logger.info("–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if refresh_token_force(force):
            if not debug:
                click.echo("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
            
            if verbose or debug:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º —Ç–æ–∫–µ–Ω–µ
                token_manager = get_global_token_manager()
                new_info = token_manager.get_token_info()
                
                if new_info:
                    expires_in = new_info.get("expires_in", 0)
                    hours = expires_in // 3600
                    minutes = (expires_in % 3600) // 60
                    
                    logger.info(f"–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω: {hours}—á {minutes}–º")
        else:
            if not debug:
                click.echo("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω", err=True)
            sys.exit(1)
    
    except Exception as exc:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã refresh-token: {exc}")
        if debug:
            logger.debug("Refresh-token command error details:", exc_info=True)
        click.echo(f"‚ùå –û—à–∏–±–∫–∞: {exc}", err=True)
        sys.exit(1)
