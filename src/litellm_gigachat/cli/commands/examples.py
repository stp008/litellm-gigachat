"""
–ö–æ–º–∞–Ω–¥–∞ examples –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
"""

import click
import logging
import os
import sys
from pathlib import Path
from importlib import import_module

from ..utils import format_table


logger = logging.getLogger(__name__)


def get_examples_directory() -> Path:
    """–ù–∞–π—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏."""
    # –ò—â–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é examples –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
    current_file = Path(__file__)
    project_root = current_file.parent.parent.parent.parent
    examples_dir = project_root / "examples"
    
    if examples_dir.exists():
        return examples_dir
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
    for parent in current_file.parents:
        potential_examples = parent / "examples"
        if potential_examples.exists():
            return potential_examples
    
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å
    return examples_dir


def discover_examples() -> dict:
    """–ù–∞–π—Ç–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã."""
    examples_dir = get_examples_directory()
    examples = {}
    
    if not examples_dir.exists():
        logger.warning(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {examples_dir}")
        return examples
    
    # –ò—â–µ–º Python —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ examples
    for file_path in examples_dir.glob("*.py"):
        if file_path.name.startswith("__"):
            continue
        
        example_name = file_path.stem
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ docstring
        try:
            spec = import_module(f"examples.{example_name}")
            description = spec.__doc__ or "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
            description = description.strip().split('\n')[0]  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
        except Exception:
            description = "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
        
        examples[example_name] = {
            "file": file_path,
            "description": description,
            "module": f"examples.{example_name}"
        }
    
    return examples


def run_example(example_name: str) -> bool:
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä."""
    examples = discover_examples()
    
    if example_name not in examples:
        logger.error(f"–ü—Ä–∏–º–µ—Ä '{example_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    example_info = examples[example_name]
    
    try:
        logger.info(f"–ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞: {example_name}")
        logger.info(f"–û–ø–∏—Å–∞–Ω–∏–µ: {example_info['description']}")
        logger.info(f"–§–∞–π–ª: {example_info['file']}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–º–µ—Ä–∞–º –≤ sys.path
        examples_dir = get_examples_directory()
        if str(examples_dir.parent) not in sys.path:
            sys.path.insert(0, str(examples_dir.parent))
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–¥—É–ª—å
        module = import_module(example_info['module'])
        
        # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é main
        if hasattr(module, 'main'):
            logger.info("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main()...")
            result = module.main()
            logger.info("–ü—Ä–∏–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            logger.warning("–§—É–Ω–∫—Ü–∏—è main() –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ")
            logger.info("–ú–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω")
            return True
            
    except Exception as exc:
        logger.error(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ '{example_name}': {exc}")
        logger.debug("Example execution error details:", exc_info=True)
        return False


def run_interactive_examples() -> None:
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–º–µ—Ä–æ–≤."""
    examples = discover_examples()
    
    if not examples:
        click.echo("‚ùå –ü—Ä–∏–º–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    click.echo("üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:")
    click.echo("=" * 40)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
    for i, (name, info) in enumerate(examples.items(), 1):
        click.echo(f"{i}. {name}")
        click.echo(f"   {info['description']}")
        click.echo()
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä
    while True:
        try:
            choice = click.prompt(
                f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä (1-{len(examples)}) –∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞",
                type=str
            )
            
            if choice.lower() in ['q', 'quit', 'exit']:
                click.echo("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            
            try:
                choice_num = int(choice)
                if 1 <= choice_num <= len(examples):
                    example_name = list(examples.keys())[choice_num - 1]
                    
                    click.echo(f"\nüöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞: {example_name}")
                    click.echo("-" * 30)
                    
                    if run_example(example_name):
                        click.echo("‚úÖ –ü—Ä–∏–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                    else:
                        click.echo("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞")
                    
                    click.echo("-" * 30)
                    
                    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä
                    if not click.confirm("–ó–∞–ø—É—Å—Ç–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä?"):
                        break
                else:
                    click.echo(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(examples)}")
            except ValueError:
                click.echo("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
                
        except (KeyboardInterrupt, EOFError):
            click.echo("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break


@click.command()
@click.option(
    '--list',
    'list_examples',
    is_flag=True,
    help='–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤'
)
@click.option(
    '--run',
    'run_specific',
    type=str,
    help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä –ø–æ –∏–º–µ–Ω–∏'
)
@click.pass_context
def examples(ctx, list_examples, run_specific):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
    
    verbose = ctx.obj.get('verbose', False)
    debug = ctx.obj.get('debug', False)
    
    if debug:
        click.echo(f"üîç Debug mode enabled")
        click.echo(f"üîç Verbose mode: {verbose}")
        click.echo(f"üîç List examples: {list_examples}")
        click.echo(f"üîç Run specific: {run_specific}")
    
    # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–º–µ—Ä—ã
    examples_dict = discover_examples()
    examples_dir = get_examples_directory()
    
    if debug:
        click.echo(f"üîç Examples directory: {examples_dir}")
        click.echo(f"üîç Found {len(examples_dict)} examples")
    
    if not examples_dict:
        click.echo("‚ùå –ü—Ä–∏–º–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", err=True)
        click.echo(f"–û–∂–∏–¥–∞–µ–º–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {examples_dir}")
        sys.exit(1)
    
    if list_examples:
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
        if not debug:
            click.echo("üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã:")
            click.echo("=" * 40)
        
        examples_table = {}
        for name, info in examples_dict.items():
            examples_table[name] = info['description']
        
        if verbose or debug:
            click.echo(format_table(examples_table, "–ü—Ä–∏–º–µ—Ä—ã"))
        else:
            for name, info in examples_dict.items():
                click.echo(f"‚Ä¢ {name}: {info['description']}")
    
    elif run_specific:
        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä
        if not debug:
            click.echo(f"üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞: {run_specific}")
            click.echo("=" * 40)
        
        if run_example(run_specific):
            if not debug:
                click.echo("‚úÖ –ü—Ä–∏–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            click.echo("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞", err=True)
            sys.exit(1)
    
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        if not debug:
            click.echo("üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏–º–µ—Ä–æ–≤")
            click.echo("=" * 40)
        
        try:
            run_interactive_examples()
        except Exception as exc:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞: {exc}")
            if debug:
                logger.debug("Interactive mode error details:", exc_info=True)
            click.echo(f"‚ùå –û—à–∏–±–∫–∞: {exc}", err=True)
            sys.exit(1)
