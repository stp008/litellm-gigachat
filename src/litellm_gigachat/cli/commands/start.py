"""
–ö–æ–º–∞–Ω–¥–∞ start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ LiteLLM –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è GigaChat.
"""

import click
import logging
import sys
from dotenv import load_dotenv

from ...proxy.server import (
    check_environment,
    check_dependencies,
    setup_certificates,
    setup_gigachat_integration,
    start_proxy_server
)


logger = logging.getLogger(__name__)


@click.command()
@click.option(
    '--host',
    default='0.0.0.0',
    help='–•–æ—Å—Ç –¥–ª—è –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ [default: 0.0.0.0]'
)
@click.option(
    '--port',
    type=int,
    default=4000,
    help='–ü–æ—Ä—Ç –¥–ª—è –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ [default: 4000]'
)
@click.option(
    '--config',
    default='config.yml',
    help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ [default: config.yml]'
)
@click.pass_context
def start(ctx, host, port, config):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å LiteLLM –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –¥–ª—è GigaChat."""
    
    verbose = ctx.obj.get('verbose', False)
    debug = ctx.obj.get('debug', False)
    
    if debug:
        click.echo(f"üîç Debug mode enabled")
        click.echo(f"üîç Verbose mode: {verbose}")
        click.echo(f"üîç Host: {host}")
        click.echo(f"üîç Port: {port}")
        click.echo(f"üîç Config: {config}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    if not debug:
        click.echo("üöÄ –ó–∞–ø—É—Å–∫ LiteLLM –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è GigaChat")
        click.echo("=" * 50)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ server.py
    checks = [
        ("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è", check_environment),
        ("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏", check_dependencies),
        ("–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã", setup_certificates),
        ("GigaChat –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", setup_gigachat_integration)
    ]
    
    for check_name, check_func in checks:
        if debug:
            logger.debug(f"–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: {check_name}")
        elif verbose:
            click.echo(f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞: {check_name}")
        
        try:
            if not check_func():
                if not verbose and not debug:
                    click.echo(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {check_name}")
                sys.exit(1)
            else:
                if verbose and not debug:
                    click.echo(f"  ‚úì {check_name}: OK")
        except Exception as exc:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ '{check_name}': {exc}")
            if debug:
                logger.debug(f"Check error details:", exc_info=True)
            if not verbose and not debug:
                click.echo(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {check_name}: {exc}")
            sys.exit(1)
    
    if not debug:
        click.echo("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
        click.echo("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ server.py
    try:
        success = start_proxy_server(
            host=host,
            port=port,
            config_file=config,
            verbose=verbose,
            debug=debug
        )
        
        if success:
            if not debug:
                click.echo("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
        else:
            if not debug:
                click.echo("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞")
            sys.exit(1)
            
    except Exception as exc:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {exc}")
        if debug:
            logger.debug("Server start error details:", exc_info=True)
        if not verbose and not debug:
            click.echo(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {exc}")
        sys.exit(1)
